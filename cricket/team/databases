const express = require('express')
const app = express()
const path = require('path')
const {open} = require('sqlite')
const sqlite3 = require('sqlite3')
const dbPath = path.join(__dirname, 'cricketTeam.db')
app.use(express.json())
let db = null
const intializeDBandServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    })
    app.listen(3000, () => {
      console.log('Server is running at the http://localhost:3000/')
    })
  } catch (e) {
    console.log(`DB Erroe: ${e.message}`)
    process.exit(1)
  }
}
intializeDBandServer()

const ans = dbObject => {
  return {
    playerId: dbObject.player_id,
    playerName: dbObject.player_name,
    jerseyNumber: dbObject.jersey_number,
    role: dbObject.role,
  }
}

//API 1
app.get('/players/', async (request, response) => {
  const gettingAllNames = `
   SELECT * FROM cricket_team`
  const allNames = await db.all(gettingAllNames)
  const ans = allNames => {
    return {
      playerId: allNames.player_id,
      playerName: allNames.player_name,
      jerseyNumber: allNames.jersey_number,
      role: allNames.role,
    }
  }

  response.send(allNames.map(eachPlayer => ans(eachPlayer)))
})

//API 2

app.post('/players/', async (request, response) => {
  const cricketDetails = request.body
  const {playerName, jerseyNumber, role} = cricketDetails

  const addCricketQuery = `
 INSERT INTO 
 cricket_team (player_name, jersey_number, role)
 VALUES (
  '${playerName}',
  ${jerseyNumber},
  '${role}'

 );`
  const dbResponse = await db.run(addCricketQuery)
  response.send('Player Added to Team')
})

//API 3

app.get('/players/:playerId/', async (request, response) => {
  const {playerId} = request.params
  const playerDetails = request.body
  const cricketQuery = `SELECT * 
  FROM cricket_team
  WHERE player_id = ${playerId}`
  const oneCricketQuery = await db.get(cricketQuery)

  response.send(ans(oneCricketQuery))
})

//UPADTE DATABASE (API 4)
app.put('/players/:playerId/', async (request, response) => {
  const {playerId} = request.params
  const updating = request.body
  const {playerName, jerseyNumber, role} = updating
  const api4 = `
  UPDATE 
  cricket_team
  SET 
  player_name = '${playerName}',
  jersey_number = ${jerseyNumber},
  role = '${role}'
  WHERE player_id = ${playerId}`

  await db.run(api4)
  response.send('Player Details Updated')
})

//DELETE DATABASE (API 5)
app.delete('/players/:playerId/', async (request, response) => {
  const {playerId} = request.params
  const deleteCricketPlayerDetails = `
   DELETE FROM 
   cricket_team 
   WHERE 
   player_id = ${playerId}`

  await db.run(deleteCricketPlayerDetails)
  response.send('Player Removed')
})
module.exports = app
